Validator Ended
Description

Maze generation algorithmare very famous ways of generating a maze to solve. You have been asked by your friend Noddy to validate the generated maze. A maze is correct iff

- The maze has exactly one entry point and exactly one exit point (exactly 2 openings in the edges)

**    and**

- there must be at least one path from the entry point to the exit point.


Input
Input Format

The first line consists of an integer t, the number of test cases.

Then for each test case, the first line consists of two integers m and n, the number of rows and columns in the maze. Then contains the description of the matrix M of order m x n. M[i][j]=# represents a wall and M[i][j]='.' represents a space.

Constraints

1<=t<=10000

1<=m<=20

1<=n<=20


Output
For each test case print whether the maze is "yes" (without quotes) if the maze is valid or "no" (without quotes) otherwise


Sample Input 1 

6
4 4
####
#...
#.##
#.##
5 5
#.###
#..##
##..#
#.#.#
###.#
1 1
.
5 1
#
#
.
.
#
2 2
#.
.#
3 4
#..#
#.##
#.##
Sample Output 1

yes
yes
no
yes
no
no